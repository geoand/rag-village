package com.glycin.ragvillage.ai

import com.glycin.ragvillage.ai.configuration.OllamaServiceConfiguration
import com.glycin.ragvillage.model.VillagerCommand
import dev.langchain4j.memory.chat.MessageWindowChatMemory
import dev.langchain4j.model.ollama.OllamaChatModel
import dev.langchain4j.service.AiServices
import dev.langchain4j.service.UserMessage
import org.springframework.stereotype.Service

@Service
class JudgeService(
    private val config: OllamaServiceConfiguration,
){
    lateinit var judgement: AiJudge

    fun initAssistant(villagers: List<String>, locations: Set<String>) {

        judgement = AiServices.builder(AiJudge::class.java)
            .chatLanguageModel(
                OllamaChatModel.builder()
                    .logRequests(config.logRequests)
                    .logResponses(config.logResponses)
                    .baseUrl(config.url)
                    .modelName(config.modelName)
                    .temperature(config.temperature)
                    .build()
            )
            .chatMemoryProvider {
                MessageWindowChatMemory.withMaxMessages(2) // TODO: DO NET SET THIS TO 1, IT WILL REMOVE THE USER MESSAGE IF U ALSO HAVE A SYSTEM MESSAGE
            }.systemMessageProvider {
                """
                You are a validation agent tasked with verifying the responses generated by a primary agent for a role-playing game set in Little Minas Morgul. 
                Your role is to extract structured data from the input you receive.
                                
                Your output must STRICTLY (I MEAN IT!) ADHERE TO THE FOLLOWING JSON FORMAT
                
                {
                  "moveTo": "string or null",
                  "talkTo": "string or null",
                  "wait": "boolean"
                }
                """.trimIndent()
            }
            .build()
    }
}


interface AiJudge {
    fun judgeCommand (@UserMessage messageToBeJudge: String) : VillagerCommand
}